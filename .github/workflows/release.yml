name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.24

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags="-w -s" -o socks-tunnel ./cmd/main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./socks-tunnel
          asset_name: socks-tunnel
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./socks-tunnel
          asset_name: socks-tunnel
          asset_content_type: application/octet-stream

      - name: Get Latest Release ID
        id: get-latest-release-id
        run: |
          echo "::set-output name=id::$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" | jq '.id')"

      - name: Delete Latest Release
        run: |
          curl -X DELETE "https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.get-latest-release-id.outputs.id }}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"

      - name: Create Latest Release
        id: create_latest_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Latest Release
          draft: false
          prerelease: false

      - name: Upload Latest Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_latest_release.outputs.upload_url }}
          asset_path: ./socks-tunnel
          asset_name: socks-tunnel
          asset_content_type: application/octet-stream
